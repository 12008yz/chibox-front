export type Currency = 'RUB' | 'USD' | 'EUR' | 'GBP' | 'CNY';

export interface ExchangeRates {
  RUB: number;
  USD: number;
  EUR: number;
  GBP: number;
  CNY: number;
}

export interface TopUpPackage {
  id: string;
  chicoins: number;
  bonus: number;
  totalChicoins: number;
  price: number;
  currency: Currency;
  currencySymbol: string;
  popular?: boolean;
}

export interface CurrencyInfo {
  currentCurrency: Currency;
  currencySymbol: string;
  chicoinsSymbol: string;
  exchangeRates: ExchangeRates;
  lastUpdated: string | null;
  supportedCurrencies: Currency[];
  topUpPackages: TopUpPackage[];
  conversionInfo: {
    base: string;
    formula: string;
    note: string;
  };
}

export const CURRENCY_SYMBOLS: Record<Currency | 'ChiCoins', string> = {
  RUB: '‚ÇΩ',
  USD: '$',
  EUR: '‚Ç¨',
  GBP: '¬£',
  CNY: '¬•',
  ChiCoins: '‚ö°'
};

export const CURRENCY_FLAGS: Record<Currency, string> = {
  RUB: 'üá∑üá∫',
  USD: 'üá∫üá∏',
  EUR: 'üá™üá∫',
  GBP: 'üá¨üáß',
  CNY: 'üá®üá≥'
};

export const CURRENCY_NAMES: Record<Currency, string> = {
  RUB: '–†–æ—Å—Å–∏–π—Å–∫–∏–π —Ä—É–±–ª—å',
  USD: '–î–æ–ª–ª–∞—Ä –°–®–ê',
  EUR: '–ï–≤—Ä–æ',
  GBP: '–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤',
  CNY: '–ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å'
};

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å ChiCoins –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É
 */
export function convertFromChiCoins(
  chicoins: number,
  toCurrency: Currency,
  exchangeRates: ExchangeRates
): number {
  if (!exchangeRates[toCurrency]) {
    return chicoins;
  }

  return chicoins * exchangeRates[toCurrency];
}

/**
 * –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∞–ª—é—Ç—É –≤ ChiCoins
 */
export function convertToChiCoins(
  amount: number,
  fromCurrency: Currency,
  exchangeRates: ExchangeRates
): number {
  if (!exchangeRates[fromCurrency]) {
    return amount;
  }

  return Math.round(amount / exchangeRates[fromCurrency]);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É —Å –≤–∞–ª—é—Ç–æ–π
 */
export function formatCurrency(
  amount: number,
  currency: Currency | 'ChiCoins',
  showFraction: boolean = false
): string {
  const formatted = new Intl.NumberFormat('ru-RU', {
    minimumFractionDigits: showFraction ? 2 : 0,
    maximumFractionDigits: showFraction ? 2 : 0
  }).format(amount);

  const symbol = CURRENCY_SYMBOLS[currency];

  if (currency === 'ChiCoins') {
    return `${formatted} ${symbol}`;
  }

  return `${symbol}${formatted}`;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –≤–∞–ª–∏–¥–Ω–æ–π –≤–∞–ª—é—Ç–æ–π
 */
function isValidCurrency(value: string): value is Currency {
  return ['RUB', 'USD', 'EUR', 'GBP', 'CNY'].includes(value);
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –≤–∞–ª—é—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
 */
export function getSavedCurrency(): Currency | null {
  const saved = localStorage.getItem('userCurrency');
  if (saved && isValidCurrency(saved)) {
    return saved as Currency;
  }
  return null;
}

/**
 * –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É –≤ localStorage
 */
export function saveCurrency(currency: Currency): void {
  localStorage.setItem('userCurrency', currency);
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞–ª—é—Ç—É –ø–æ —è–∑—ã–∫—É –±—Ä–∞—É–∑–µ—Ä–∞
 */
export function detectCurrencyFromLocale(): Currency {
  const locale = navigator.language.toLowerCase();

  if (locale.includes('ru')) return 'RUB';
  if (locale.includes('cn') || locale.includes('zh')) return 'CNY';
  if (locale.includes('gb') || locale.includes('uk')) return 'GBP';
  if (locale.includes('eu') || locale.includes('de') || locale.includes('fr')) return 'EUR';

  return 'USD'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é USD –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
}
