// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
const API_BASE_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000/api';
// –£–±–∏—Ä–∞–µ–º /api –∏–∑ –∫–æ–Ω—Ü–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
const SERVER_BASE_URL = API_BASE_URL.replace(/\/api\/?$/, '');

export const getImageUrl = (path: string | null | undefined): string => {
  console.log('üîß getImageUrl called with:', path);

  if (!path) {
    console.log('‚ö†Ô∏è Path is empty, returning empty string');
    return '';
  }

  // –ï—Å–ª–∏ –ø—É—Ç—å —É–∂–µ –ø–æ–ª–Ω—ã–π URL (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http:// –∏–ª–∏ https://), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–∞–∫ –µ—Å—Ç—å
  if (path.startsWith('http://') || path.startsWith('https://')) {
    console.log('‚úÖ Full URL detected, returning as is:', path);
    return path;
  }

  // –û—á–∏—â–∞–µ–º –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—É—Ç–∏, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–ª–∏—Å—å
  let cleanPath = path;
  let cleaned = false;

  if (cleanPath.includes('../public/')) {
    console.log('üßπ Cleaning "../public/" from path');
    cleanPath = cleanPath.replace('../public', '');
    cleaned = true;
  }
  if (cleanPath.includes('public/')) {
    console.log('üßπ Cleaning "public/" from path');
    cleanPath = cleanPath.replace('public/', '');
    cleaned = true;
  }

  if (cleaned) {
    console.log('üßπ Path after cleaning:', cleanPath);
  }

  // –ï—Å–ª–∏ –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL —Å–µ—Ä–≤–µ—Ä–∞
  if (cleanPath.startsWith('/')) {
    const fullUrl = `${SERVER_BASE_URL}${cleanPath}`;
    console.log('‚úÖ Generated URL (absolute path):', {
      serverBaseUrl: SERVER_BASE_URL,
      cleanPath,
      fullUrl
    });
    return fullUrl;
  }

  // –ï—Å–ª–∏ –ø—É—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π URL –∏ /
  const fullUrl = `${SERVER_BASE_URL}/${cleanPath}`;
  console.log('‚úÖ Generated URL (relative path):', {
    serverBaseUrl: SERVER_BASE_URL,
    cleanPath,
    fullUrl
  });
  return fullUrl;
};
